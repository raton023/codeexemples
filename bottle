package com.frystcraft.zMejoras.comandos;

import java.util.Arrays;
import java.util.HashMap;
import java.util.UUID;

import org.bukkit.Material;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.entity.ThrownExpBottle;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.entity.ExpBottleEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

public class BotellaEXP implements CommandExecutor, Listener {

	HashMap<UUID, Integer> data = new HashMap<UUID, Integer>();
	
	@Override
	public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
		
		if(sender instanceof Player) {
			Player p=(Player)sender;
			if(p.getInventory().firstEmpty()==-1) {
				p.sendMessage("vacia un slot");
				return true;
			}
			ItemStack a= new ItemStack(Material.EXP_BOTTLE,1);
			ItemMeta im=a.getItemMeta();
			im.setLore(Arrays.asList("Experiencia Total:",""+(p.getTotalExperience())));
			a.setItemMeta(im);
			p.getInventory().addItem(a);
			//level
			p.setLevel(0);
			//barra level 0.0 al 1.0
			p.setExp(0);
			//el total de experiencia en un solo numero
			p.setTotalExperience(0);
		}
		return true;
	}

	
	@EventHandler
	private void tirada(PlayerInteractEvent e) 
	{
		if(e.getAction()==Action.RIGHT_CLICK_AIR || e.getAction()==Action.RIGHT_CLICK_BLOCK) 
		{
			if(e.getItem()!=null && e.getItem().getType().equals(Material.EXP_BOTTLE) && e.getItem().hasItemMeta() && e.getItem().getItemMeta().hasLore()) 
			{
				ThrownExpBottle t = (ThrownExpBottle)e.getPlayer().launchProjectile(ThrownExpBottle.class);
				data.put(t.getUniqueId(), Integer.valueOf(e.getItem().getItemMeta().getLore().get(1)));	
				e.setCancelled(true);
				e.getItem().setAmount(e.getItem().getAmount()-1);
			}
		}
	}

	
	@EventHandler
	private void exp(ExpBottleEvent e) {
		if(data.containsKey(e.getEntity().getUniqueId())) {
			e.setExperience(data.get(e.getEntity().getUniqueId()));
			data.remove(e.getEntity().getUniqueId());
		}
	}
	
	
	
	
}
